{"refresh":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MDk5OTg5MywiaWF0IjoxNzQ4NDA3ODkzLCJqdGkiOiIzY2JjZDg2YTQ3Njc0NDBlYTMzNjE1Njg4ZGMyOGIxOCIsInVzZXJfaWQiOjJ9.nGgB2shwYaMZJSzVDYsyOcNGoy_PAFR-gfVYDmJO5HE",
"access":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MjcxODkzLCJpYXQiOjE3NDg0MDc4OTMsImp0aSI6IjhmNjIzYjM1MjE3YTRhZDdhODU1ZjEzZmRkMjJmMDE1IiwidXNlcl9pZCI6Mn0.mJbiVX7uaKV_Rd4kyYWHioeVS_07YBKbGZBNR5VSqGw"}%   
#verify OTP
curl -X POST http://127.0.0.1:8000/api/accounts/verify-otp/ \
-H "Content-Type: application/json" \
-d '{
  "email": "kevin@snaildy.com",
  "otp": "931322"
}'

#login
curl -X POST http://localhost:8000/api/accounts/login/ \
-H "Content-Type: application/json" \
-d '{
  "identifier": "kevin886886@gmail.com",
  "password": "123456"
}'

#register
curl -X POST http://localhost:8000/api/accounts/register/ \
-H "Content-Type: application/json" \
-d '{
  "email": "kevin@snaildy.com",
  "password": "123456",
  "login_method": "email",
  "first_name": "Kevin",
  "last_name": "Snaildy"
}'

#refresh token
curl -X POST http://127.0.0.1:8000/api/accounts/token/refresh/ \
-H "Content-Type: application/json" \
-d '{
"refresh" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0ODM5ODU3NiwiaWF0IjoxNzQ4MzEyMTc2LCJqdGkiOiI2YzQ5NDNkNjYwZTI0MTk4OGQxMzgxZTI3ZDA5MDgzNyIsInVzZXJfaWQiOjExfQ.u9Ovr06o24dWC0-pFrnvDVuSdODzeMRWOgQ1LrrsoQA"
}'

#bind student acc
curl -X POST http://127.0.0.1:8000/api/student/bind-student/ \
-H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5Njk5MjUyLCJpYXQiOjE3NDg4MzUyNTIsImp0aSI6IjY5ZTllYmMwMmRkNjRmZWZiYWUyZDM0NmMwYjc3N2FhIiwidXNlcl9pZCI6M30.8h37nMPeaI3RzBaoxCKYeFfWNmHxDaUuyXbkeb7AvYU" \
-H "Content-Type: application/json" \
-d '{
  "student_token": "000000000"
  ""
}'

#get all binded student tokens
curl -X GET http://127.0.0.1:8000/api/student/get-all-binded-student-tokens/ \
-H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5Njk5MjUyLCJpYXQiOjE3NDg4MzUyNTIsImp0aSI6IjY5ZTllYmMwMmRkNjRmZWZiYWUyZDM0NmMwYjc3N2FhIiwidXNlcl9pZCI6M30.8h37nMPeaI3RzBaoxCKYeFfWNmHxDaUuyXbkeb7AvYU" \
-H "Content-Type: application/json" \




docker start snaildy_parent_backend-web-1
docker start snaildy_parent_backend-db-1

docker exec -t snaildy_parent_backend-db-1 pg_dump -U kevinleung snaildy-parent-db > backup_$(date +%F_%T).sql
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc" -delete

docker-compose exec web python manage.py makemigrations
docker-compose exec web python manage.py migrate

docker exec -it snaildy_parent_backend-db-1 psql -U kevinleung -d snaildy_parent_db
ALTER TABLE service_service
ADD COLUMN type varchar(20) NOT NULL DEFAULT 'one-time';

docker restart snaildy_parent_backend-db-1
docker restart snaildy_parent_backend-web-1

docker exec -it snaildy_parent_backend-web-1 python manage.py makemigrations
docker exec -it snaildy_parent_backend-web-1 python manage.py migrate


# Backup (optional)
docker exec -t snaildy_parent_backend-db-1 pg_dump -U postgres snaildy-parent-db > backup.sql

# Delete migration files
find . -path "*/migrations/*.py" ! -name "__init__.py" -delete
find . -path "*/migrations/*.pyc" -delete

# Drop and recreate schema
docker exec -it snaildy_parent_backend-db-1 psql -U postgres -d snaildy-parent-db
# Inside psql:
# DROP SCHEMA public CASCADE;
# CREATE SCHEMA public;
# GRANT ALL ON SCHEMA public TO postgres;
# \q

# Create migrations and migrate
docker exec -it snaildy_parent_backend-web-1 python manage.py makemigrations student
docker exec -it snaildy_parent_backend-web-1 python manage.py migrate
python3 manage.py migrate student
python3 manage.py migrate service
python3 manage.py migrate activity_record
# Restart Django app
docker restart snaildy_parent_backend-web-1



docker-compose down -v --remove-orphans

docker volume prune -f

docker-compose up -d --build

docker-compose exec web python manage.py migrate

docker-compose exec web python manage.py createsuperuser

#maintenance_mode
docker-compose exec web python manage.py maintenance_mode on
docker-compose exec web python manage.py maintenance_mode off