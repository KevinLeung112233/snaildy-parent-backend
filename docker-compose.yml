
services:
  db:
    image: postgres:17-alpine  # Smaller image
    env_file: .env
    environment:
      POSTGRES_DB: snaildy_parent_db
      POSTGRES_USER: kevinleung
      POSTGRES_PASSWORD: Snaildy2025!D
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kevinleung -d snaildy_parent_db"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 30s
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redisdata:/data
    networks:
      - backend
    restart: unless-stopped

  web:
    build: .
    env_file: .env
    volumes:
      - static_volume:/app/staticfiles
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend
    restart: "no"
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/static:ro
      - media_volume:/media:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
  redisdata:
  static_volume:
  media_volume: